#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TCKfinalProject.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="finalProjectASP")]
	public partial class dbfinalProjectASPDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertadmin(admin instance);
    partial void Updateadmin(admin instance);
    partial void Deleteadmin(admin instance);
    partial void Insertcustomer(customer instance);
    partial void Updatecustomer(customer instance);
    partial void Deletecustomer(customer instance);
    partial void Insertfood(food instance);
    partial void Updatefood(food instance);
    partial void Deletefood(food instance);
    partial void InsertMerchant(Merchant instance);
    partial void UpdateMerchant(Merchant instance);
    partial void DeleteMerchant(Merchant instance);
    partial void Insertorderdetail(orderdetail instance);
    partial void Updateorderdetail(orderdetail instance);
    partial void Deleteorderdetail(orderdetail instance);
    partial void Insertorder(order instance);
    partial void Updateorder(order instance);
    partial void Deleteorder(order instance);
    partial void InsertPayment(Payment instance);
    partial void UpdatePayment(Payment instance);
    partial void DeletePayment(Payment instance);
    partial void InsertPaymentDestination(PaymentDestination instance);
    partial void UpdatePaymentDestination(PaymentDestination instance);
    partial void DeletePaymentDestination(PaymentDestination instance);
    partial void InsertPaymentNotification(PaymentNotification instance);
    partial void UpdatePaymentNotification(PaymentNotification instance);
    partial void DeletePaymentNotification(PaymentNotification instance);
    partial void InsertPaymentSignature(PaymentSignature instance);
    partial void UpdatePaymentSignature(PaymentSignature instance);
    partial void DeletePaymentSignature(PaymentSignature instance);
    partial void InsertPaymentTransaction(PaymentTransaction instance);
    partial void UpdatePaymentTransaction(PaymentTransaction instance);
    partial void DeletePaymentTransaction(PaymentTransaction instance);
    #endregion
		
		public dbfinalProjectASPDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["finalProjectASPConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public dbfinalProjectASPDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbfinalProjectASPDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbfinalProjectASPDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbfinalProjectASPDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<admin> admins
		{
			get
			{
				return this.GetTable<admin>();
			}
		}
		
		public System.Data.Linq.Table<customer> customers
		{
			get
			{
				return this.GetTable<customer>();
			}
		}
		
		public System.Data.Linq.Table<food> foods
		{
			get
			{
				return this.GetTable<food>();
			}
		}
		
		public System.Data.Linq.Table<Merchant> Merchants
		{
			get
			{
				return this.GetTable<Merchant>();
			}
		}
		
		public System.Data.Linq.Table<orderdetail> orderdetails
		{
			get
			{
				return this.GetTable<orderdetail>();
			}
		}
		
		public System.Data.Linq.Table<order> orders
		{
			get
			{
				return this.GetTable<order>();
			}
		}
		
		public System.Data.Linq.Table<Payment> Payments
		{
			get
			{
				return this.GetTable<Payment>();
			}
		}
		
		public System.Data.Linq.Table<PaymentDestination> PaymentDestinations
		{
			get
			{
				return this.GetTable<PaymentDestination>();
			}
		}
		
		public System.Data.Linq.Table<PaymentNotification> PaymentNotifications
		{
			get
			{
				return this.GetTable<PaymentNotification>();
			}
		}
		
		public System.Data.Linq.Table<PaymentSignature> PaymentSignatures
		{
			get
			{
				return this.GetTable<PaymentSignature>();
			}
		}
		
		public System.Data.Linq.Table<PaymentTransaction> PaymentTransactions
		{
			get
			{
				return this.GetTable<PaymentTransaction>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.admins")]
	public partial class admin : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _admin_id;
		
		private string _admin_name;
		
		private string _admin_username;
		
		private string _admin_password;
		
		private string _admin_email;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onadmin_idChanging(int value);
    partial void Onadmin_idChanged();
    partial void Onadmin_nameChanging(string value);
    partial void Onadmin_nameChanged();
    partial void Onadmin_usernameChanging(string value);
    partial void Onadmin_usernameChanged();
    partial void Onadmin_passwordChanging(string value);
    partial void Onadmin_passwordChanged();
    partial void Onadmin_emailChanging(string value);
    partial void Onadmin_emailChanged();
    #endregion
		
		public admin()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_admin_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int admin_id
		{
			get
			{
				return this._admin_id;
			}
			set
			{
				if ((this._admin_id != value))
				{
					this.Onadmin_idChanging(value);
					this.SendPropertyChanging();
					this._admin_id = value;
					this.SendPropertyChanged("admin_id");
					this.Onadmin_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_admin_name", DbType="NVarChar(50)")]
		public string admin_name
		{
			get
			{
				return this._admin_name;
			}
			set
			{
				if ((this._admin_name != value))
				{
					this.Onadmin_nameChanging(value);
					this.SendPropertyChanging();
					this._admin_name = value;
					this.SendPropertyChanged("admin_name");
					this.Onadmin_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_admin_username", DbType="VarChar(20)")]
		public string admin_username
		{
			get
			{
				return this._admin_username;
			}
			set
			{
				if ((this._admin_username != value))
				{
					this.Onadmin_usernameChanging(value);
					this.SendPropertyChanging();
					this._admin_username = value;
					this.SendPropertyChanged("admin_username");
					this.Onadmin_usernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_admin_password", DbType="VarChar(10)")]
		public string admin_password
		{
			get
			{
				return this._admin_password;
			}
			set
			{
				if ((this._admin_password != value))
				{
					this.Onadmin_passwordChanging(value);
					this.SendPropertyChanging();
					this._admin_password = value;
					this.SendPropertyChanged("admin_password");
					this.Onadmin_passwordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_admin_email", DbType="VarChar(30)")]
		public string admin_email
		{
			get
			{
				return this._admin_email;
			}
			set
			{
				if ((this._admin_email != value))
				{
					this.Onadmin_emailChanging(value);
					this.SendPropertyChanging();
					this._admin_email = value;
					this.SendPropertyChanged("admin_email");
					this.Onadmin_emailChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.customers")]
	public partial class customer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _customer_id;
		
		private string _customer_name;
		
		private string _username;
		
		private string _password;
		
		private string _email;
		
		private string _address;
		
		private string _numberphone;
		
		private System.Nullable<System.DateTime> _dob;
		
		private EntitySet<order> _orders;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Oncustomer_idChanging(int value);
    partial void Oncustomer_idChanged();
    partial void Oncustomer_nameChanging(string value);
    partial void Oncustomer_nameChanged();
    partial void OnusernameChanging(string value);
    partial void OnusernameChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnaddressChanging(string value);
    partial void OnaddressChanged();
    partial void OnnumberphoneChanging(string value);
    partial void OnnumberphoneChanged();
    partial void OndobChanging(System.Nullable<System.DateTime> value);
    partial void OndobChanged();
    #endregion
		
		public customer()
		{
			this._orders = new EntitySet<order>(new Action<order>(this.attach_orders), new Action<order>(this.detach_orders));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customer_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int customer_id
		{
			get
			{
				return this._customer_id;
			}
			set
			{
				if ((this._customer_id != value))
				{
					this.Oncustomer_idChanging(value);
					this.SendPropertyChanging();
					this._customer_id = value;
					this.SendPropertyChanged("customer_id");
					this.Oncustomer_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customer_name", DbType="NVarChar(50)")]
		public string customer_name
		{
			get
			{
				return this._customer_name;
			}
			set
			{
				if ((this._customer_name != value))
				{
					this.Oncustomer_nameChanging(value);
					this.SendPropertyChanging();
					this._customer_name = value;
					this.SendPropertyChanged("customer_name");
					this.Oncustomer_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="VarChar(20)")]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					this.OnusernameChanging(value);
					this.SendPropertyChanging();
					this._username = value;
					this.SendPropertyChanged("username");
					this.OnusernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="VarChar(10)")]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(30)")]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_address", DbType="NVarChar(100)")]
		public string address
		{
			get
			{
				return this._address;
			}
			set
			{
				if ((this._address != value))
				{
					this.OnaddressChanging(value);
					this.SendPropertyChanging();
					this._address = value;
					this.SendPropertyChanged("address");
					this.OnaddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_numberphone", DbType="VarChar(12)")]
		public string numberphone
		{
			get
			{
				return this._numberphone;
			}
			set
			{
				if ((this._numberphone != value))
				{
					this.OnnumberphoneChanging(value);
					this.SendPropertyChanging();
					this._numberphone = value;
					this.SendPropertyChanged("numberphone");
					this.OnnumberphoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dob", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> dob
		{
			get
			{
				return this._dob;
			}
			set
			{
				if ((this._dob != value))
				{
					this.OndobChanging(value);
					this.SendPropertyChanging();
					this._dob = value;
					this.SendPropertyChanged("dob");
					this.OndobChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="customer_order", Storage="_orders", ThisKey="customer_id", OtherKey="customer_id")]
		public EntitySet<order> orders
		{
			get
			{
				return this._orders;
			}
			set
			{
				this._orders.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_orders(order entity)
		{
			this.SendPropertyChanging();
			entity.customer = this;
		}
		
		private void detach_orders(order entity)
		{
			this.SendPropertyChanging();
			entity.customer = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.foods")]
	public partial class food : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _food_id;
		
		private string _food_name;
		
		private string _image;
		
		private System.Nullable<decimal> _price;
		
		private System.Nullable<System.DateTime> _update_date;
		
		private System.Nullable<int> _quantity_instock;
		
		private EntitySet<orderdetail> _orderdetails;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onfood_idChanging(int value);
    partial void Onfood_idChanged();
    partial void Onfood_nameChanging(string value);
    partial void Onfood_nameChanged();
    partial void OnimageChanging(string value);
    partial void OnimageChanged();
    partial void OnpriceChanging(System.Nullable<decimal> value);
    partial void OnpriceChanged();
    partial void Onupdate_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onupdate_dateChanged();
    partial void Onquantity_instockChanging(System.Nullable<int> value);
    partial void Onquantity_instockChanged();
    #endregion
		
		public food()
		{
			this._orderdetails = new EntitySet<orderdetail>(new Action<orderdetail>(this.attach_orderdetails), new Action<orderdetail>(this.detach_orderdetails));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_food_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int food_id
		{
			get
			{
				return this._food_id;
			}
			set
			{
				if ((this._food_id != value))
				{
					this.Onfood_idChanging(value);
					this.SendPropertyChanging();
					this._food_id = value;
					this.SendPropertyChanged("food_id");
					this.Onfood_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_food_name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string food_name
		{
			get
			{
				return this._food_name;
			}
			set
			{
				if ((this._food_name != value))
				{
					this.Onfood_nameChanging(value);
					this.SendPropertyChanging();
					this._food_name = value;
					this.SendPropertyChanged("food_name");
					this.Onfood_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_image", DbType="VarChar(50)")]
		public string image
		{
			get
			{
				return this._image;
			}
			set
			{
				if ((this._image != value))
				{
					this.OnimageChanging(value);
					this.SendPropertyChanging();
					this._image = value;
					this.SendPropertyChanged("image");
					this.OnimageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> price
		{
			get
			{
				return this._price;
			}
			set
			{
				if ((this._price != value))
				{
					this.OnpriceChanging(value);
					this.SendPropertyChanging();
					this._price = value;
					this.SendPropertyChanged("price");
					this.OnpriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_update_date", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> update_date
		{
			get
			{
				return this._update_date;
			}
			set
			{
				if ((this._update_date != value))
				{
					this.Onupdate_dateChanging(value);
					this.SendPropertyChanging();
					this._update_date = value;
					this.SendPropertyChanged("update_date");
					this.Onupdate_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_quantity_instock", DbType="Int")]
		public System.Nullable<int> quantity_instock
		{
			get
			{
				return this._quantity_instock;
			}
			set
			{
				if ((this._quantity_instock != value))
				{
					this.Onquantity_instockChanging(value);
					this.SendPropertyChanging();
					this._quantity_instock = value;
					this.SendPropertyChanged("quantity_instock");
					this.Onquantity_instockChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="food_orderdetail", Storage="_orderdetails", ThisKey="food_id", OtherKey="food_id")]
		public EntitySet<orderdetail> orderdetails
		{
			get
			{
				return this._orderdetails;
			}
			set
			{
				this._orderdetails.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_orderdetails(orderdetail entity)
		{
			this.SendPropertyChanging();
			entity.food = this;
		}
		
		private void detach_orderdetails(orderdetail entity)
		{
			this.SendPropertyChanging();
			entity.food = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Merchant")]
	public partial class Merchant : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Id;
		
		private string _MerchanName;
		
		private string _MerchanWebLink;
		
		private string _MerchantlpnUrl;
		
		private string _MerchantReturnUrl;
		
		private string _SecretKey;
		
		private System.Nullable<bool> _IsActive;
		
		private EntitySet<Payment> _Payments;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(string value);
    partial void OnIdChanged();
    partial void OnMerchanNameChanging(string value);
    partial void OnMerchanNameChanged();
    partial void OnMerchanWebLinkChanging(string value);
    partial void OnMerchanWebLinkChanged();
    partial void OnMerchantlpnUrlChanging(string value);
    partial void OnMerchantlpnUrlChanged();
    partial void OnMerchantReturnUrlChanging(string value);
    partial void OnMerchantReturnUrlChanged();
    partial void OnSecretKeyChanging(string value);
    partial void OnSecretKeyChanged();
    partial void OnIsActiveChanging(System.Nullable<bool> value);
    partial void OnIsActiveChanged();
    #endregion
		
		public Merchant()
		{
			this._Payments = new EntitySet<Payment>(new Action<Payment>(this.attach_Payments), new Action<Payment>(this.detach_Payments));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MerchanName", DbType="NVarChar(50)")]
		public string MerchanName
		{
			get
			{
				return this._MerchanName;
			}
			set
			{
				if ((this._MerchanName != value))
				{
					this.OnMerchanNameChanging(value);
					this.SendPropertyChanging();
					this._MerchanName = value;
					this.SendPropertyChanged("MerchanName");
					this.OnMerchanNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MerchanWebLink", DbType="NVarChar(250)")]
		public string MerchanWebLink
		{
			get
			{
				return this._MerchanWebLink;
			}
			set
			{
				if ((this._MerchanWebLink != value))
				{
					this.OnMerchanWebLinkChanging(value);
					this.SendPropertyChanging();
					this._MerchanWebLink = value;
					this.SendPropertyChanged("MerchanWebLink");
					this.OnMerchanWebLinkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MerchantlpnUrl", DbType="NVarChar(250)")]
		public string MerchantlpnUrl
		{
			get
			{
				return this._MerchantlpnUrl;
			}
			set
			{
				if ((this._MerchantlpnUrl != value))
				{
					this.OnMerchantlpnUrlChanging(value);
					this.SendPropertyChanging();
					this._MerchantlpnUrl = value;
					this.SendPropertyChanged("MerchantlpnUrl");
					this.OnMerchantlpnUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MerchantReturnUrl", DbType="NVarChar(250)")]
		public string MerchantReturnUrl
		{
			get
			{
				return this._MerchantReturnUrl;
			}
			set
			{
				if ((this._MerchantReturnUrl != value))
				{
					this.OnMerchantReturnUrlChanging(value);
					this.SendPropertyChanging();
					this._MerchantReturnUrl = value;
					this.SendPropertyChanged("MerchantReturnUrl");
					this.OnMerchantReturnUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecretKey", DbType="NVarChar(50)")]
		public string SecretKey
		{
			get
			{
				return this._SecretKey;
			}
			set
			{
				if ((this._SecretKey != value))
				{
					this.OnSecretKeyChanging(value);
					this.SendPropertyChanging();
					this._SecretKey = value;
					this.SendPropertyChanged("SecretKey");
					this.OnSecretKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit")]
		public System.Nullable<bool> IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Merchant_Payment", Storage="_Payments", ThisKey="Id", OtherKey="MerchantId")]
		public EntitySet<Payment> Payments
		{
			get
			{
				return this._Payments;
			}
			set
			{
				this._Payments.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Payments(Payment entity)
		{
			this.SendPropertyChanging();
			entity.Merchant = this;
		}
		
		private void detach_Payments(Payment entity)
		{
			this.SendPropertyChanging();
			entity.Merchant = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.orderdetails")]
	public partial class orderdetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _order_id;
		
		private int _food_id;
		
		private System.Nullable<int> _quantity;
		
		private System.Nullable<decimal> _price;
		
		private EntityRef<food> _food;
		
		private EntityRef<order> _order;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onorder_idChanging(int value);
    partial void Onorder_idChanged();
    partial void Onfood_idChanging(int value);
    partial void Onfood_idChanged();
    partial void OnquantityChanging(System.Nullable<int> value);
    partial void OnquantityChanged();
    partial void OnpriceChanging(System.Nullable<decimal> value);
    partial void OnpriceChanged();
    #endregion
		
		public orderdetail()
		{
			this._food = default(EntityRef<food>);
			this._order = default(EntityRef<order>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_order_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int order_id
		{
			get
			{
				return this._order_id;
			}
			set
			{
				if ((this._order_id != value))
				{
					if (this._order.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onorder_idChanging(value);
					this.SendPropertyChanging();
					this._order_id = value;
					this.SendPropertyChanged("order_id");
					this.Onorder_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_food_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int food_id
		{
			get
			{
				return this._food_id;
			}
			set
			{
				if ((this._food_id != value))
				{
					if (this._food.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onfood_idChanging(value);
					this.SendPropertyChanging();
					this._food_id = value;
					this.SendPropertyChanged("food_id");
					this.Onfood_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_quantity", DbType="Int")]
		public System.Nullable<int> quantity
		{
			get
			{
				return this._quantity;
			}
			set
			{
				if ((this._quantity != value))
				{
					this.OnquantityChanging(value);
					this.SendPropertyChanging();
					this._quantity = value;
					this.SendPropertyChanged("quantity");
					this.OnquantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> price
		{
			get
			{
				return this._price;
			}
			set
			{
				if ((this._price != value))
				{
					this.OnpriceChanging(value);
					this.SendPropertyChanging();
					this._price = value;
					this.SendPropertyChanged("price");
					this.OnpriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="food_orderdetail", Storage="_food", ThisKey="food_id", OtherKey="food_id", IsForeignKey=true)]
		public food food
		{
			get
			{
				return this._food.Entity;
			}
			set
			{
				food previousValue = this._food.Entity;
				if (((previousValue != value) 
							|| (this._food.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._food.Entity = null;
						previousValue.orderdetails.Remove(this);
					}
					this._food.Entity = value;
					if ((value != null))
					{
						value.orderdetails.Add(this);
						this._food_id = value.food_id;
					}
					else
					{
						this._food_id = default(int);
					}
					this.SendPropertyChanged("food");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="order_orderdetail", Storage="_order", ThisKey="order_id", OtherKey="order_id", IsForeignKey=true)]
		public order order
		{
			get
			{
				return this._order.Entity;
			}
			set
			{
				order previousValue = this._order.Entity;
				if (((previousValue != value) 
							|| (this._order.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._order.Entity = null;
						previousValue.orderdetails.Remove(this);
					}
					this._order.Entity = value;
					if ((value != null))
					{
						value.orderdetails.Add(this);
						this._order_id = value.order_id;
					}
					else
					{
						this._order_id = default(int);
					}
					this.SendPropertyChanged("order");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.orders")]
	public partial class order : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _order_id;
		
		private System.Nullable<bool> _ispayment;
		
		private System.Nullable<bool> _isship;
		
		private System.Nullable<System.DateTime> _order_date;
		
		private System.Nullable<System.DateTime> _delivery_date;
		
		private System.Nullable<int> _customer_id;
		
		private EntitySet<orderdetail> _orderdetails;
		
		private EntityRef<customer> _customer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onorder_idChanging(int value);
    partial void Onorder_idChanged();
    partial void OnispaymentChanging(System.Nullable<bool> value);
    partial void OnispaymentChanged();
    partial void OnisshipChanging(System.Nullable<bool> value);
    partial void OnisshipChanged();
    partial void Onorder_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onorder_dateChanged();
    partial void Ondelivery_dateChanging(System.Nullable<System.DateTime> value);
    partial void Ondelivery_dateChanged();
    partial void Oncustomer_idChanging(System.Nullable<int> value);
    partial void Oncustomer_idChanged();
    #endregion
		
		public order()
		{
			this._orderdetails = new EntitySet<orderdetail>(new Action<orderdetail>(this.attach_orderdetails), new Action<orderdetail>(this.detach_orderdetails));
			this._customer = default(EntityRef<customer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_order_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int order_id
		{
			get
			{
				return this._order_id;
			}
			set
			{
				if ((this._order_id != value))
				{
					this.Onorder_idChanging(value);
					this.SendPropertyChanging();
					this._order_id = value;
					this.SendPropertyChanged("order_id");
					this.Onorder_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ispayment", DbType="Bit")]
		public System.Nullable<bool> ispayment
		{
			get
			{
				return this._ispayment;
			}
			set
			{
				if ((this._ispayment != value))
				{
					this.OnispaymentChanging(value);
					this.SendPropertyChanging();
					this._ispayment = value;
					this.SendPropertyChanged("ispayment");
					this.OnispaymentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isship", DbType="Bit")]
		public System.Nullable<bool> isship
		{
			get
			{
				return this._isship;
			}
			set
			{
				if ((this._isship != value))
				{
					this.OnisshipChanging(value);
					this.SendPropertyChanging();
					this._isship = value;
					this.SendPropertyChanged("isship");
					this.OnisshipChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_order_date", DbType="Date")]
		public System.Nullable<System.DateTime> order_date
		{
			get
			{
				return this._order_date;
			}
			set
			{
				if ((this._order_date != value))
				{
					this.Onorder_dateChanging(value);
					this.SendPropertyChanging();
					this._order_date = value;
					this.SendPropertyChanged("order_date");
					this.Onorder_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_delivery_date", DbType="Date")]
		public System.Nullable<System.DateTime> delivery_date
		{
			get
			{
				return this._delivery_date;
			}
			set
			{
				if ((this._delivery_date != value))
				{
					this.Ondelivery_dateChanging(value);
					this.SendPropertyChanging();
					this._delivery_date = value;
					this.SendPropertyChanged("delivery_date");
					this.Ondelivery_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customer_id", DbType="Int")]
		public System.Nullable<int> customer_id
		{
			get
			{
				return this._customer_id;
			}
			set
			{
				if ((this._customer_id != value))
				{
					if (this._customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncustomer_idChanging(value);
					this.SendPropertyChanging();
					this._customer_id = value;
					this.SendPropertyChanged("customer_id");
					this.Oncustomer_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="order_orderdetail", Storage="_orderdetails", ThisKey="order_id", OtherKey="order_id")]
		public EntitySet<orderdetail> orderdetails
		{
			get
			{
				return this._orderdetails;
			}
			set
			{
				this._orderdetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="customer_order", Storage="_customer", ThisKey="customer_id", OtherKey="customer_id", IsForeignKey=true)]
		public customer customer
		{
			get
			{
				return this._customer.Entity;
			}
			set
			{
				customer previousValue = this._customer.Entity;
				if (((previousValue != value) 
							|| (this._customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._customer.Entity = null;
						previousValue.orders.Remove(this);
					}
					this._customer.Entity = value;
					if ((value != null))
					{
						value.orders.Add(this);
						this._customer_id = value.customer_id;
					}
					else
					{
						this._customer_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("customer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_orderdetails(orderdetail entity)
		{
			this.SendPropertyChanging();
			entity.order = this;
		}
		
		private void detach_orderdetails(orderdetail entity)
		{
			this.SendPropertyChanging();
			entity.order = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Payment")]
	public partial class Payment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Id;
		
		private string _PaymentContent;
		
		private string _PaymentCurrency;
		
		private string _PaymentRefId;
		
		private System.Nullable<decimal> _RequiredAmount;
		
		private System.Nullable<System.DateTime> _PaymentDate;
		
		private System.Nullable<System.DateTime> _ExpireDate;
		
		private string _PaymentLanguage;
		
		private string _MerchantId;
		
		private string _PaymentDestinationId;
		
		private System.Nullable<decimal> _PaidAmount;
		
		private string _PaymentStatus;
		
		private string _PaymentLastMessage;
		
		private EntitySet<PaymentNotification> _PaymentNotifications;
		
		private EntitySet<PaymentSignature> _PaymentSignatures;
		
		private EntitySet<PaymentTransaction> _PaymentTransactions;
		
		private EntityRef<Merchant> _Merchant;
		
		private EntityRef<PaymentDestination> _PaymentDestination;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(string value);
    partial void OnIdChanged();
    partial void OnPaymentContentChanging(string value);
    partial void OnPaymentContentChanged();
    partial void OnPaymentCurrencyChanging(string value);
    partial void OnPaymentCurrencyChanged();
    partial void OnPaymentRefIdChanging(string value);
    partial void OnPaymentRefIdChanged();
    partial void OnRequiredAmountChanging(System.Nullable<decimal> value);
    partial void OnRequiredAmountChanged();
    partial void OnPaymentDateChanging(System.Nullable<System.DateTime> value);
    partial void OnPaymentDateChanged();
    partial void OnExpireDateChanging(System.Nullable<System.DateTime> value);
    partial void OnExpireDateChanged();
    partial void OnPaymentLanguageChanging(string value);
    partial void OnPaymentLanguageChanged();
    partial void OnMerchantIdChanging(string value);
    partial void OnMerchantIdChanged();
    partial void OnPaymentDestinationIdChanging(string value);
    partial void OnPaymentDestinationIdChanged();
    partial void OnPaidAmountChanging(System.Nullable<decimal> value);
    partial void OnPaidAmountChanged();
    partial void OnPaymentStatusChanging(string value);
    partial void OnPaymentStatusChanged();
    partial void OnPaymentLastMessageChanging(string value);
    partial void OnPaymentLastMessageChanged();
    #endregion
		
		public Payment()
		{
			this._PaymentNotifications = new EntitySet<PaymentNotification>(new Action<PaymentNotification>(this.attach_PaymentNotifications), new Action<PaymentNotification>(this.detach_PaymentNotifications));
			this._PaymentSignatures = new EntitySet<PaymentSignature>(new Action<PaymentSignature>(this.attach_PaymentSignatures), new Action<PaymentSignature>(this.detach_PaymentSignatures));
			this._PaymentTransactions = new EntitySet<PaymentTransaction>(new Action<PaymentTransaction>(this.attach_PaymentTransactions), new Action<PaymentTransaction>(this.detach_PaymentTransactions));
			this._Merchant = default(EntityRef<Merchant>);
			this._PaymentDestination = default(EntityRef<PaymentDestination>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentContent", DbType="NVarChar(250)")]
		public string PaymentContent
		{
			get
			{
				return this._PaymentContent;
			}
			set
			{
				if ((this._PaymentContent != value))
				{
					this.OnPaymentContentChanging(value);
					this.SendPropertyChanging();
					this._PaymentContent = value;
					this.SendPropertyChanged("PaymentContent");
					this.OnPaymentContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentCurrency", DbType="NVarChar(10)")]
		public string PaymentCurrency
		{
			get
			{
				return this._PaymentCurrency;
			}
			set
			{
				if ((this._PaymentCurrency != value))
				{
					this.OnPaymentCurrencyChanging(value);
					this.SendPropertyChanging();
					this._PaymentCurrency = value;
					this.SendPropertyChanged("PaymentCurrency");
					this.OnPaymentCurrencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentRefId", DbType="NVarChar(50)")]
		public string PaymentRefId
		{
			get
			{
				return this._PaymentRefId;
			}
			set
			{
				if ((this._PaymentRefId != value))
				{
					this.OnPaymentRefIdChanging(value);
					this.SendPropertyChanging();
					this._PaymentRefId = value;
					this.SendPropertyChanged("PaymentRefId");
					this.OnPaymentRefIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequiredAmount", DbType="Decimal(19,2)")]
		public System.Nullable<decimal> RequiredAmount
		{
			get
			{
				return this._RequiredAmount;
			}
			set
			{
				if ((this._RequiredAmount != value))
				{
					this.OnRequiredAmountChanging(value);
					this.SendPropertyChanging();
					this._RequiredAmount = value;
					this.SendPropertyChanged("RequiredAmount");
					this.OnRequiredAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> PaymentDate
		{
			get
			{
				return this._PaymentDate;
			}
			set
			{
				if ((this._PaymentDate != value))
				{
					this.OnPaymentDateChanging(value);
					this.SendPropertyChanging();
					this._PaymentDate = value;
					this.SendPropertyChanged("PaymentDate");
					this.OnPaymentDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpireDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ExpireDate
		{
			get
			{
				return this._ExpireDate;
			}
			set
			{
				if ((this._ExpireDate != value))
				{
					this.OnExpireDateChanging(value);
					this.SendPropertyChanging();
					this._ExpireDate = value;
					this.SendPropertyChanged("ExpireDate");
					this.OnExpireDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentLanguage", DbType="NVarChar(10)")]
		public string PaymentLanguage
		{
			get
			{
				return this._PaymentLanguage;
			}
			set
			{
				if ((this._PaymentLanguage != value))
				{
					this.OnPaymentLanguageChanging(value);
					this.SendPropertyChanging();
					this._PaymentLanguage = value;
					this.SendPropertyChanged("PaymentLanguage");
					this.OnPaymentLanguageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MerchantId", DbType="NVarChar(50)")]
		public string MerchantId
		{
			get
			{
				return this._MerchantId;
			}
			set
			{
				if ((this._MerchantId != value))
				{
					if (this._Merchant.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMerchantIdChanging(value);
					this.SendPropertyChanging();
					this._MerchantId = value;
					this.SendPropertyChanged("MerchantId");
					this.OnMerchantIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentDestinationId", DbType="NVarChar(50)")]
		public string PaymentDestinationId
		{
			get
			{
				return this._PaymentDestinationId;
			}
			set
			{
				if ((this._PaymentDestinationId != value))
				{
					if (this._PaymentDestination.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPaymentDestinationIdChanging(value);
					this.SendPropertyChanging();
					this._PaymentDestinationId = value;
					this.SendPropertyChanged("PaymentDestinationId");
					this.OnPaymentDestinationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaidAmount", DbType="Decimal(19,2)")]
		public System.Nullable<decimal> PaidAmount
		{
			get
			{
				return this._PaidAmount;
			}
			set
			{
				if ((this._PaidAmount != value))
				{
					this.OnPaidAmountChanging(value);
					this.SendPropertyChanging();
					this._PaidAmount = value;
					this.SendPropertyChanged("PaidAmount");
					this.OnPaidAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentStatus", DbType="NVarChar(20)")]
		public string PaymentStatus
		{
			get
			{
				return this._PaymentStatus;
			}
			set
			{
				if ((this._PaymentStatus != value))
				{
					this.OnPaymentStatusChanging(value);
					this.SendPropertyChanging();
					this._PaymentStatus = value;
					this.SendPropertyChanged("PaymentStatus");
					this.OnPaymentStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentLastMessage", DbType="NVarChar(250)")]
		public string PaymentLastMessage
		{
			get
			{
				return this._PaymentLastMessage;
			}
			set
			{
				if ((this._PaymentLastMessage != value))
				{
					this.OnPaymentLastMessageChanging(value);
					this.SendPropertyChanging();
					this._PaymentLastMessage = value;
					this.SendPropertyChanged("PaymentLastMessage");
					this.OnPaymentLastMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Payment_PaymentNotification", Storage="_PaymentNotifications", ThisKey="Id", OtherKey="PaymentId")]
		public EntitySet<PaymentNotification> PaymentNotifications
		{
			get
			{
				return this._PaymentNotifications;
			}
			set
			{
				this._PaymentNotifications.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Payment_PaymentSignature", Storage="_PaymentSignatures", ThisKey="Id", OtherKey="PaymentId")]
		public EntitySet<PaymentSignature> PaymentSignatures
		{
			get
			{
				return this._PaymentSignatures;
			}
			set
			{
				this._PaymentSignatures.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Payment_PaymentTransaction", Storage="_PaymentTransactions", ThisKey="Id", OtherKey="PaymentId")]
		public EntitySet<PaymentTransaction> PaymentTransactions
		{
			get
			{
				return this._PaymentTransactions;
			}
			set
			{
				this._PaymentTransactions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Merchant_Payment", Storage="_Merchant", ThisKey="MerchantId", OtherKey="Id", IsForeignKey=true)]
		public Merchant Merchant
		{
			get
			{
				return this._Merchant.Entity;
			}
			set
			{
				Merchant previousValue = this._Merchant.Entity;
				if (((previousValue != value) 
							|| (this._Merchant.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Merchant.Entity = null;
						previousValue.Payments.Remove(this);
					}
					this._Merchant.Entity = value;
					if ((value != null))
					{
						value.Payments.Add(this);
						this._MerchantId = value.Id;
					}
					else
					{
						this._MerchantId = default(string);
					}
					this.SendPropertyChanged("Merchant");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PaymentDestination_Payment", Storage="_PaymentDestination", ThisKey="PaymentDestinationId", OtherKey="Id", IsForeignKey=true)]
		public PaymentDestination PaymentDestination
		{
			get
			{
				return this._PaymentDestination.Entity;
			}
			set
			{
				PaymentDestination previousValue = this._PaymentDestination.Entity;
				if (((previousValue != value) 
							|| (this._PaymentDestination.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PaymentDestination.Entity = null;
						previousValue.Payments.Remove(this);
					}
					this._PaymentDestination.Entity = value;
					if ((value != null))
					{
						value.Payments.Add(this);
						this._PaymentDestinationId = value.Id;
					}
					else
					{
						this._PaymentDestinationId = default(string);
					}
					this.SendPropertyChanged("PaymentDestination");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PaymentNotifications(PaymentNotification entity)
		{
			this.SendPropertyChanging();
			entity.Payment = this;
		}
		
		private void detach_PaymentNotifications(PaymentNotification entity)
		{
			this.SendPropertyChanging();
			entity.Payment = null;
		}
		
		private void attach_PaymentSignatures(PaymentSignature entity)
		{
			this.SendPropertyChanging();
			entity.Payment = this;
		}
		
		private void detach_PaymentSignatures(PaymentSignature entity)
		{
			this.SendPropertyChanging();
			entity.Payment = null;
		}
		
		private void attach_PaymentTransactions(PaymentTransaction entity)
		{
			this.SendPropertyChanging();
			entity.Payment = this;
		}
		
		private void detach_PaymentTransactions(PaymentTransaction entity)
		{
			this.SendPropertyChanging();
			entity.Payment = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PaymentDestination")]
	public partial class PaymentDestination : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Id;
		
		private string _DesLogo;
		
		private string _DesShortName;
		
		private string _DesName;
		
		private System.Nullable<int> _DesSortIndex;
		
		private string _PaymentId;
		
		private System.Nullable<bool> _IsActive;
		
		private EntitySet<Payment> _Payments;
		
		private EntitySet<PaymentDestination> _PaymentDestinations;
		
		private EntityRef<PaymentDestination> _PaymentDestination1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(string value);
    partial void OnIdChanged();
    partial void OnDesLogoChanging(string value);
    partial void OnDesLogoChanged();
    partial void OnDesShortNameChanging(string value);
    partial void OnDesShortNameChanged();
    partial void OnDesNameChanging(string value);
    partial void OnDesNameChanged();
    partial void OnDesSortIndexChanging(System.Nullable<int> value);
    partial void OnDesSortIndexChanged();
    partial void OnPaymentIdChanging(string value);
    partial void OnPaymentIdChanged();
    partial void OnIsActiveChanging(System.Nullable<bool> value);
    partial void OnIsActiveChanged();
    #endregion
		
		public PaymentDestination()
		{
			this._Payments = new EntitySet<Payment>(new Action<Payment>(this.attach_Payments), new Action<Payment>(this.detach_Payments));
			this._PaymentDestinations = new EntitySet<PaymentDestination>(new Action<PaymentDestination>(this.attach_PaymentDestinations), new Action<PaymentDestination>(this.detach_PaymentDestinations));
			this._PaymentDestination1 = default(EntityRef<PaymentDestination>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DesLogo", DbType="NVarChar(250)")]
		public string DesLogo
		{
			get
			{
				return this._DesLogo;
			}
			set
			{
				if ((this._DesLogo != value))
				{
					this.OnDesLogoChanging(value);
					this.SendPropertyChanging();
					this._DesLogo = value;
					this.SendPropertyChanged("DesLogo");
					this.OnDesLogoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DesShortName", DbType="NVarChar(50)")]
		public string DesShortName
		{
			get
			{
				return this._DesShortName;
			}
			set
			{
				if ((this._DesShortName != value))
				{
					this.OnDesShortNameChanging(value);
					this.SendPropertyChanging();
					this._DesShortName = value;
					this.SendPropertyChanged("DesShortName");
					this.OnDesShortNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DesName", DbType="NVarChar(250)")]
		public string DesName
		{
			get
			{
				return this._DesName;
			}
			set
			{
				if ((this._DesName != value))
				{
					this.OnDesNameChanging(value);
					this.SendPropertyChanging();
					this._DesName = value;
					this.SendPropertyChanged("DesName");
					this.OnDesNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DesSortIndex", DbType="Int")]
		public System.Nullable<int> DesSortIndex
		{
			get
			{
				return this._DesSortIndex;
			}
			set
			{
				if ((this._DesSortIndex != value))
				{
					this.OnDesSortIndexChanging(value);
					this.SendPropertyChanging();
					this._DesSortIndex = value;
					this.SendPropertyChanged("DesSortIndex");
					this.OnDesSortIndexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentId", DbType="NVarChar(50)")]
		public string PaymentId
		{
			get
			{
				return this._PaymentId;
			}
			set
			{
				if ((this._PaymentId != value))
				{
					if (this._PaymentDestination1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPaymentIdChanging(value);
					this.SendPropertyChanging();
					this._PaymentId = value;
					this.SendPropertyChanged("PaymentId");
					this.OnPaymentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit")]
		public System.Nullable<bool> IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PaymentDestination_Payment", Storage="_Payments", ThisKey="Id", OtherKey="PaymentDestinationId")]
		public EntitySet<Payment> Payments
		{
			get
			{
				return this._Payments;
			}
			set
			{
				this._Payments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PaymentDestination_PaymentDestination", Storage="_PaymentDestinations", ThisKey="Id", OtherKey="PaymentId")]
		public EntitySet<PaymentDestination> PaymentDestinations
		{
			get
			{
				return this._PaymentDestinations;
			}
			set
			{
				this._PaymentDestinations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PaymentDestination_PaymentDestination", Storage="_PaymentDestination1", ThisKey="PaymentId", OtherKey="Id", IsForeignKey=true)]
		public PaymentDestination PaymentDestination1
		{
			get
			{
				return this._PaymentDestination1.Entity;
			}
			set
			{
				PaymentDestination previousValue = this._PaymentDestination1.Entity;
				if (((previousValue != value) 
							|| (this._PaymentDestination1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PaymentDestination1.Entity = null;
						previousValue.PaymentDestinations.Remove(this);
					}
					this._PaymentDestination1.Entity = value;
					if ((value != null))
					{
						value.PaymentDestinations.Add(this);
						this._PaymentId = value.Id;
					}
					else
					{
						this._PaymentId = default(string);
					}
					this.SendPropertyChanged("PaymentDestination1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Payments(Payment entity)
		{
			this.SendPropertyChanging();
			entity.PaymentDestination = this;
		}
		
		private void detach_Payments(Payment entity)
		{
			this.SendPropertyChanging();
			entity.PaymentDestination = null;
		}
		
		private void attach_PaymentDestinations(PaymentDestination entity)
		{
			this.SendPropertyChanging();
			entity.PaymentDestination1 = this;
		}
		
		private void detach_PaymentDestinations(PaymentDestination entity)
		{
			this.SendPropertyChanging();
			entity.PaymentDestination1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PaymentNotification")]
	public partial class PaymentNotification : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Id;
		
		private string _PaymentRefId;
		
		private string _NotiDate;
		
		private string _NotiAmount;
		
		private string _NotiContent;
		
		private string _NotiMessage;
		
		private string _NotiSignature;
		
		private string _PaymentId;
		
		private string _MerchantId;
		
		private string _NotiStatus;
		
		private string _NotiRefDate;
		
		private EntityRef<Payment> _Payment;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(string value);
    partial void OnIdChanged();
    partial void OnPaymentRefIdChanging(string value);
    partial void OnPaymentRefIdChanged();
    partial void OnNotiDateChanging(string value);
    partial void OnNotiDateChanged();
    partial void OnNotiAmountChanging(string value);
    partial void OnNotiAmountChanged();
    partial void OnNotiContentChanging(string value);
    partial void OnNotiContentChanged();
    partial void OnNotiMessageChanging(string value);
    partial void OnNotiMessageChanged();
    partial void OnNotiSignatureChanging(string value);
    partial void OnNotiSignatureChanged();
    partial void OnPaymentIdChanging(string value);
    partial void OnPaymentIdChanged();
    partial void OnMerchantIdChanging(string value);
    partial void OnMerchantIdChanged();
    partial void OnNotiStatusChanging(string value);
    partial void OnNotiStatusChanged();
    partial void OnNotiRefDateChanging(string value);
    partial void OnNotiRefDateChanged();
    #endregion
		
		public PaymentNotification()
		{
			this._Payment = default(EntityRef<Payment>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentRefId", DbType="NVarChar(50)")]
		public string PaymentRefId
		{
			get
			{
				return this._PaymentRefId;
			}
			set
			{
				if ((this._PaymentRefId != value))
				{
					this.OnPaymentRefIdChanging(value);
					this.SendPropertyChanging();
					this._PaymentRefId = value;
					this.SendPropertyChanged("PaymentRefId");
					this.OnPaymentRefIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NotiDate", DbType="NVarChar(50)")]
		public string NotiDate
		{
			get
			{
				return this._NotiDate;
			}
			set
			{
				if ((this._NotiDate != value))
				{
					this.OnNotiDateChanging(value);
					this.SendPropertyChanging();
					this._NotiDate = value;
					this.SendPropertyChanged("NotiDate");
					this.OnNotiDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NotiAmount", DbType="NVarChar(50)")]
		public string NotiAmount
		{
			get
			{
				return this._NotiAmount;
			}
			set
			{
				if ((this._NotiAmount != value))
				{
					this.OnNotiAmountChanging(value);
					this.SendPropertyChanging();
					this._NotiAmount = value;
					this.SendPropertyChanged("NotiAmount");
					this.OnNotiAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NotiContent", DbType="NVarChar(50)")]
		public string NotiContent
		{
			get
			{
				return this._NotiContent;
			}
			set
			{
				if ((this._NotiContent != value))
				{
					this.OnNotiContentChanging(value);
					this.SendPropertyChanging();
					this._NotiContent = value;
					this.SendPropertyChanged("NotiContent");
					this.OnNotiContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NotiMessage", DbType="NVarChar(50)")]
		public string NotiMessage
		{
			get
			{
				return this._NotiMessage;
			}
			set
			{
				if ((this._NotiMessage != value))
				{
					this.OnNotiMessageChanging(value);
					this.SendPropertyChanging();
					this._NotiMessage = value;
					this.SendPropertyChanged("NotiMessage");
					this.OnNotiMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NotiSignature", DbType="NVarChar(50)")]
		public string NotiSignature
		{
			get
			{
				return this._NotiSignature;
			}
			set
			{
				if ((this._NotiSignature != value))
				{
					this.OnNotiSignatureChanging(value);
					this.SendPropertyChanging();
					this._NotiSignature = value;
					this.SendPropertyChanged("NotiSignature");
					this.OnNotiSignatureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentId", DbType="NVarChar(50)")]
		public string PaymentId
		{
			get
			{
				return this._PaymentId;
			}
			set
			{
				if ((this._PaymentId != value))
				{
					if (this._Payment.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPaymentIdChanging(value);
					this.SendPropertyChanging();
					this._PaymentId = value;
					this.SendPropertyChanged("PaymentId");
					this.OnPaymentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MerchantId", DbType="NVarChar(50)")]
		public string MerchantId
		{
			get
			{
				return this._MerchantId;
			}
			set
			{
				if ((this._MerchantId != value))
				{
					this.OnMerchantIdChanging(value);
					this.SendPropertyChanging();
					this._MerchantId = value;
					this.SendPropertyChanged("MerchantId");
					this.OnMerchantIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NotiStatus", DbType="NVarChar(50)")]
		public string NotiStatus
		{
			get
			{
				return this._NotiStatus;
			}
			set
			{
				if ((this._NotiStatus != value))
				{
					this.OnNotiStatusChanging(value);
					this.SendPropertyChanging();
					this._NotiStatus = value;
					this.SendPropertyChanged("NotiStatus");
					this.OnNotiStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NotiRefDate", DbType="NVarChar(50)")]
		public string NotiRefDate
		{
			get
			{
				return this._NotiRefDate;
			}
			set
			{
				if ((this._NotiRefDate != value))
				{
					this.OnNotiRefDateChanging(value);
					this.SendPropertyChanging();
					this._NotiRefDate = value;
					this.SendPropertyChanged("NotiRefDate");
					this.OnNotiRefDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Payment_PaymentNotification", Storage="_Payment", ThisKey="PaymentId", OtherKey="Id", IsForeignKey=true)]
		public Payment Payment
		{
			get
			{
				return this._Payment.Entity;
			}
			set
			{
				Payment previousValue = this._Payment.Entity;
				if (((previousValue != value) 
							|| (this._Payment.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Payment.Entity = null;
						previousValue.PaymentNotifications.Remove(this);
					}
					this._Payment.Entity = value;
					if ((value != null))
					{
						value.PaymentNotifications.Add(this);
						this._PaymentId = value.Id;
					}
					else
					{
						this._PaymentId = default(string);
					}
					this.SendPropertyChanged("Payment");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PaymentSignature")]
	public partial class PaymentSignature : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Id;
		
		private string _SignValue;
		
		private string _SignAlgo;
		
		private System.Nullable<System.DateTime> _SignDate;
		
		private string _SignOwn;
		
		private string _PaymentId;
		
		private EntityRef<Payment> _Payment;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(string value);
    partial void OnIdChanged();
    partial void OnSignValueChanging(string value);
    partial void OnSignValueChanged();
    partial void OnSignAlgoChanging(string value);
    partial void OnSignAlgoChanged();
    partial void OnSignDateChanging(System.Nullable<System.DateTime> value);
    partial void OnSignDateChanged();
    partial void OnSignOwnChanging(string value);
    partial void OnSignOwnChanged();
    partial void OnPaymentIdChanging(string value);
    partial void OnPaymentIdChanged();
    #endregion
		
		public PaymentSignature()
		{
			this._Payment = default(EntityRef<Payment>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SignValue", DbType="NVarChar(500)")]
		public string SignValue
		{
			get
			{
				return this._SignValue;
			}
			set
			{
				if ((this._SignValue != value))
				{
					this.OnSignValueChanging(value);
					this.SendPropertyChanging();
					this._SignValue = value;
					this.SendPropertyChanged("SignValue");
					this.OnSignValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SignAlgo", DbType="NVarChar(50)")]
		public string SignAlgo
		{
			get
			{
				return this._SignAlgo;
			}
			set
			{
				if ((this._SignAlgo != value))
				{
					this.OnSignAlgoChanging(value);
					this.SendPropertyChanging();
					this._SignAlgo = value;
					this.SendPropertyChanged("SignAlgo");
					this.OnSignAlgoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SignDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> SignDate
		{
			get
			{
				return this._SignDate;
			}
			set
			{
				if ((this._SignDate != value))
				{
					this.OnSignDateChanging(value);
					this.SendPropertyChanging();
					this._SignDate = value;
					this.SendPropertyChanged("SignDate");
					this.OnSignDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SignOwn", DbType="NVarChar(50)")]
		public string SignOwn
		{
			get
			{
				return this._SignOwn;
			}
			set
			{
				if ((this._SignOwn != value))
				{
					this.OnSignOwnChanging(value);
					this.SendPropertyChanging();
					this._SignOwn = value;
					this.SendPropertyChanged("SignOwn");
					this.OnSignOwnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentId", DbType="NVarChar(50)")]
		public string PaymentId
		{
			get
			{
				return this._PaymentId;
			}
			set
			{
				if ((this._PaymentId != value))
				{
					if (this._Payment.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPaymentIdChanging(value);
					this.SendPropertyChanging();
					this._PaymentId = value;
					this.SendPropertyChanged("PaymentId");
					this.OnPaymentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Payment_PaymentSignature", Storage="_Payment", ThisKey="PaymentId", OtherKey="Id", IsForeignKey=true)]
		public Payment Payment
		{
			get
			{
				return this._Payment.Entity;
			}
			set
			{
				Payment previousValue = this._Payment.Entity;
				if (((previousValue != value) 
							|| (this._Payment.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Payment.Entity = null;
						previousValue.PaymentSignatures.Remove(this);
					}
					this._Payment.Entity = value;
					if ((value != null))
					{
						value.PaymentSignatures.Add(this);
						this._PaymentId = value.Id;
					}
					else
					{
						this._PaymentId = default(string);
					}
					this.SendPropertyChanged("Payment");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PaymentTransaction")]
	public partial class PaymentTransaction : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Id;
		
		private string _TranMessage;
		
		private string _TranPayload;
		
		private string _TranStatus;
		
		private System.Nullable<decimal> _TranAmount;
		
		private System.Nullable<System.DateTime> _TranDate;
		
		private string _PaymentId;
		
		private EntityRef<Payment> _Payment;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(string value);
    partial void OnIdChanged();
    partial void OnTranMessageChanging(string value);
    partial void OnTranMessageChanged();
    partial void OnTranPayloadChanging(string value);
    partial void OnTranPayloadChanged();
    partial void OnTranStatusChanging(string value);
    partial void OnTranStatusChanged();
    partial void OnTranAmountChanging(System.Nullable<decimal> value);
    partial void OnTranAmountChanged();
    partial void OnTranDateChanging(System.Nullable<System.DateTime> value);
    partial void OnTranDateChanged();
    partial void OnPaymentIdChanging(string value);
    partial void OnPaymentIdChanged();
    #endregion
		
		public PaymentTransaction()
		{
			this._Payment = default(EntityRef<Payment>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TranMessage", DbType="NVarChar(250)")]
		public string TranMessage
		{
			get
			{
				return this._TranMessage;
			}
			set
			{
				if ((this._TranMessage != value))
				{
					this.OnTranMessageChanging(value);
					this.SendPropertyChanging();
					this._TranMessage = value;
					this.SendPropertyChanged("TranMessage");
					this.OnTranMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TranPayload", DbType="NVarChar(500)")]
		public string TranPayload
		{
			get
			{
				return this._TranPayload;
			}
			set
			{
				if ((this._TranPayload != value))
				{
					this.OnTranPayloadChanging(value);
					this.SendPropertyChanging();
					this._TranPayload = value;
					this.SendPropertyChanged("TranPayload");
					this.OnTranPayloadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TranStatus", DbType="NVarChar(10)")]
		public string TranStatus
		{
			get
			{
				return this._TranStatus;
			}
			set
			{
				if ((this._TranStatus != value))
				{
					this.OnTranStatusChanging(value);
					this.SendPropertyChanging();
					this._TranStatus = value;
					this.SendPropertyChanged("TranStatus");
					this.OnTranStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TranAmount", DbType="Decimal(19,2)")]
		public System.Nullable<decimal> TranAmount
		{
			get
			{
				return this._TranAmount;
			}
			set
			{
				if ((this._TranAmount != value))
				{
					this.OnTranAmountChanging(value);
					this.SendPropertyChanging();
					this._TranAmount = value;
					this.SendPropertyChanged("TranAmount");
					this.OnTranAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TranDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> TranDate
		{
			get
			{
				return this._TranDate;
			}
			set
			{
				if ((this._TranDate != value))
				{
					this.OnTranDateChanging(value);
					this.SendPropertyChanging();
					this._TranDate = value;
					this.SendPropertyChanged("TranDate");
					this.OnTranDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentId", DbType="NVarChar(50)")]
		public string PaymentId
		{
			get
			{
				return this._PaymentId;
			}
			set
			{
				if ((this._PaymentId != value))
				{
					if (this._Payment.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPaymentIdChanging(value);
					this.SendPropertyChanging();
					this._PaymentId = value;
					this.SendPropertyChanged("PaymentId");
					this.OnPaymentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Payment_PaymentTransaction", Storage="_Payment", ThisKey="PaymentId", OtherKey="Id", IsForeignKey=true)]
		public Payment Payment
		{
			get
			{
				return this._Payment.Entity;
			}
			set
			{
				Payment previousValue = this._Payment.Entity;
				if (((previousValue != value) 
							|| (this._Payment.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Payment.Entity = null;
						previousValue.PaymentTransactions.Remove(this);
					}
					this._Payment.Entity = value;
					if ((value != null))
					{
						value.PaymentTransactions.Add(this);
						this._PaymentId = value.Id;
					}
					else
					{
						this._PaymentId = default(string);
					}
					this.SendPropertyChanged("Payment");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
